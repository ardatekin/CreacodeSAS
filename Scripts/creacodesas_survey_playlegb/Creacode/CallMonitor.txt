EVENT GoToCallMonitor()
{
    LOG("CREACODE->Call Monitor: GoToCallMonitor is interpreting");
    
    RunScript("CallMonitor.txt", "ConnectLegBToIVR");
}    

EVENT ConnectLegBToIVR()
{
    JoinLegs(_LEG_IVR_, _LEG_B_);
}

// 200OK received from LEGB for reInvite
EVENT CallAnswered()
{
    LOG("Creacode-> Call monitor:: CallAnswered for reInvite");
    
    //ReleaseSession();
   
    g_strStartTimeSec = GetTime();
   
    bool bRet = OpenAudioChannel(_LEG_B_);
    if (bRet == FALSE) {
        LOG("CREACODE-> OpenAudioChannel returned FALSE. Closing session!");
        CloseSession();
    }
    
    // Testing purposal
    PlayAudio(_LEG_B_, "survey_welcome.wav");
    PlayAudio(_LEG_B_, "survey_youcandial.wav");
    
    Question_1();
    //Question_2();
    
    
    UpdateTelephoneStatus("200"); // Survey completed successfully
    
    PlayAudio(_LEG_B_, "survey_goodbye.wav");
    CloseAudioChannel(_LEG_B_);
    
    CloseSession();
}

EVENT CallReject()
{
    string strResultCode = i2str(_RESPONSE_);
    LOG("Creacode-> CallMonitor:: CallReject received for re-INVITE");
    LOG("Creacode-> CallMonitor:: Reject Cause: " + strResultCode);

    if (_RESPONSE_ == 404) {
        LOG("Creacode-> CallMonitor:: Called number is not found");
    }
    if (_RESPONSE_ == 486) {
        LOG("Creacode-> CallMonitor:: Called number is busy");
    }
    if ((_RESPONSE_ == 408) || (_RESPONSE_ == 480) || (_RESPONSE_ == 484) || (_RESPONSE_ == 487) || (_RESPONSE_ == 500)) {
        LOG("Creacode-> CallMonitor:: Called number does not answer");
    }
    if (_RESPONSE_ == 603) {
        LOG("Creacode-> CallMonitor:: called party declined");
    }
    
    UpdateTelephoneStatus(strResultCode);
    
    CloseSession();
}

// RE-INVITE received FROM LEG_B
EVENT OnCallChangedByLegB()
{
    LOG("OnCallChangedByLegB in CallMonitor is interpreting");
    // Sends 200OK to LEG_B for reInvite response
    // LEG_A'a SDP will be sent
    //RedirectCall(_LEG_A_);
}

FUNCTION Question_1() 
{
    g_nQuestionNumber = 1;
    int i = 0;
    int nLen = 0;
    bool gotResult = FALSE;
    int nSelectionCount = 3;
    string strSelection = "";
    
    PlayAudio(_LEG_B_, "survey_sayfirst.wav");
    
    PlayAudio(_LEG_B_, "survey_firstquestion.wav");
    for (i = 0; i < LOOP_COUNTER; i++)
    {
        LOG("Just starting to collect digits of questions 1");
        g_strDigits = GetDigits(_LEG_B_, SURVEY_DIGIT_LEN, "survey_q1options.wav");
        
        LOG("CREACODE-> Question_1::Received digit: " + g_strDigits);
        nLen = strlen(g_strDigits);
        
        if (((nLen == 0) && (i != (LOOP_COUNTER-1))) || (str2i(g_strDigits) > nSelectionCount)) {
            PlayAudio(_LEG_B_, "survey_couldntgetanswer.wav");
            continue;
        } else {
            InsertAnswer(g_nQuestionNumber, str2i(g_strDigits));
            strSelection = "survey_q1s" +  g_strDigits + ".wav";
            PlayAudio(_LEG_B_, strSelection);
            PlayAudio(_LEG_B_, "survey_youselected.wav");
            break;
        }
    }

}

FUNCTION Question_2() 
{
    g_nQuestionNumber = 2;
    int i = 0;
    int nLen = 0;
    bool gotResult = FALSE;
    int nSelectionCount = 2;
    string strSelection = "";
    
    PlayAudio(_LEG_B_, "survey_saysecond.wav");
    
    PlayAudio(_LEG_B_, "survey_secondquestion.wav");
    for (i = 0; i < LOOP_COUNTER; i++)
    {
        g_strDigits = GetDigits(_LEG_B_, SURVEY_DIGIT_LEN, "survey_q2options.wav");
        
        LOG("CREACODE-> Question_2::Received digit: " + g_strDigits);
        nLen = strlen(g_strDigits);
        
        if (((nLen == 0) && (i != (LOOP_COUNTER-1))) || (str2i(g_strDigits) > nSelectionCount)) {
            PlayAudio(_LEG_B_, "survey_couldntgetanswer.wav");
            continue;
        } else {
            InsertAnswer(g_nQuestionNumber, str2i(g_strDigits));
            strSelection = "survey_q2s" +  g_strDigits + ".wav";
            PlayAudio(_LEG_B_, strSelection);
            PlayAudio(_LEG_B_, "survey_youselected.wav");
            break;
        }
    }

}

EVENT CallEnd()
{
    LOG("Creacode-> CallMonitor:: CallEnd in CallMonitor is interpreting");
    CloseSession();
}

EVENT OnDigit()
{
    LOG("Creacode-> CallMonitor:: OnDigit in CallMonitor is interpreting");
    SendDigit(_LEG_B_, _DIGIT_, _DIGIT_DURATION_);
}
