//Internal Globals

//Defines and constants

int SURVEY_DIGIT_LEN  = 1;
int DEST_DIGIT_LEN = 14;
int QUESTION_COUNT = 2;
int LOOP_COUNTER = 3;

int g_ConnectionId = 0;
int g_nQuestionNumber;
string g_strCalledNumber;
string g_strStartTimeSec = "0";
string g_strEndTimeSec = "0";

bool g_CallEstablished = FALSE;
bool g_NewCallAccepted = FALSE;
bool g_bCallInfoUpdated = FALSE;

string g_strDigits;
bool g_PlayingRinging;
int g_nCallStatus;

//int g_iTimerId;
//int iTimerID;
//bool g_Pound;
//bool g_IsTimerExpired;
//string g_strSessionID;

FUNCTION main()
{
    g_PlayingRinging = FALSE;
    //_LANGUAGE_ = "english";
    //g_strSessionID = randHex(16);

    //A_test();

    RunScript("Creacode\\NewSession.txt");
}

FUNCTION A_test()
{
    string strHeader="<sip:3624350600@10.100.199.59>;privacy=off;screen=no";

    int nStart = strfind(strHeader, ":") + 1;
    int nEnd = strfind(strHeader, "@"); 

    string strDiversionNr = strmid(strHeader, nStart, nEnd - nStart);

    LOG("strDiversion: " + strDiversionNr);
}

FUNCTION InsertAnswer(int nQuestionId, int nAnswerId)
{
    LOG("nQuestionId: " + i2str(nQuestionId));
    
    string strSQL = "insert into answer (id, question_id, option_id, called_number) select nextval('answer_id_seq'), question_id, option_id, '" + g_strCalledNumber + "' from question_option_xref  where question_id=" + i2str(nQuestionId) + " order by option_id asc offset " + i2str(nAnswerId - 1) + " limit 1";
    LOG("strSQL: " + strSQL);
    
    int nRet = ODBCExecute(g_ConnectionId, strSQL);
    if (nRet != 0) {
         LOG("Record inserted. question_id: " + i2str(nQuestionId) + " option_id: " +  i2str(nAnswerId - 1));
    } else {
        LOG("Record insert failed!!! question_id: " + i2str(nQuestionId) + " option_id: " +  i2str(nAnswerId - 1));
    }
}

FUNCTION int UpdateTelephoneStatus(string strCallStatus)
{
    if (g_bCallInfoUpdated == TRUE) {
        return 0;
    }
    
    LOG("nCallStatus: " + strCallStatus);
    g_bCallInfoUpdated = TRUE;

    int nDuration = 0;
    if ((strCallStatus == "200") && (str2i(g_strStartTimeSec) > 0)) {
        // Get callend second only if the result is 200
        g_strEndTimeSec = GetTime();
        nDuration = TimeDiff(g_strEndTimeSec, g_strStartTimeSec);
    }
    
    string strSQL = "update telephone_list set call_result_code=" + strCallStatus + ", call_duration=" + i2str(nDuration) + ", retry_count=retry_count+1" + " where tel_no='" + g_strCalledNumber + "'";
    LOG("strSQL: " + strSQL);
    int nRet = ODBCExecute(g_ConnectionId, strSQL);
    if (nRet != 0) {
        LOG("Call status updated successfully for Tel Number: " + g_strCalledNumber);
    } else {
        LOG("Call status update failed for Tel Number: " + g_strCalledNumber);
    }

}

FUNCTION ListAnswers()
{
    int nRet = ODBCExecuteSelect(g_ConnectionId, "select * from answer"); 
    
    if (nRet > 0) {
        while (ODBCIsEOF(g_ConnectionId) == 0) {
            LOG("CREACODE-> id: " + i2str(ODBCGetIntField(g_ConnectionId, "id")) + " question_id:" + i2str(ODBCGetIntField(g_ConnectionId, "question_id")) + " answer_id:" + i2str(ODBCGetIntField(g_ConnectionId, "answer_id")) );
            ODBCMoveNext(g_ConnectionId);
        }
    } else {
        LOG("CREACODE-> NewCall, query failed");
    }
}


FUNCTION AbortSession()
{
    EndCall(_LEG_A_);
    LOG("-------SESSION_ID:[" + i2str(_SESSION_ID_) + "]---------");
    LOG("Session has aborted.");
    
    UpdateTelephoneStatus(i2str(_RESPONSE_));
    
    if (g_ConnectionId > 0) {
        ODBCDisconnect(g_ConnectionId);
    }
    
    ReleaseSession();
}

FUNCTION CloseSession()
{
    LOG("Creacode-> CloseSession in Main is interpreting");
    if (_CLOSING_LEG_ == _LEG_A_) {
        LOG("Creacode-> Closing LEG is LEG_A");
        EndCall(_LEG_B_);
    }
    else if (_CLOSING_LEG_ == _LEG_B_) {
        LOG("Creacode-> Closing LEG is LEG_B");
        EndCall(_LEG_A_);
    }
    else {
        LOG("Creacode-> Closing LEG is not identified.");
        EndCall(_LEG_IVR_);
    }
    
    UpdateTelephoneStatus(i2str(_RESPONSE_));
    
    LOG("-------SESSION_ID:[" + i2str(_SESSION_ID_) + "]---------");
    LOG("Creacode-> Session has closed.");
    
    if (g_ConnectionId > 0) {
        ODBCDisconnect(g_ConnectionId);
    }
    
    ReleaseSession();
}

