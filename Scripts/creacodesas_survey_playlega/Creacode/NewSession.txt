EVENT NewCall()
{
    LOG("-------SESSION_ID:[" + i2str(_SESSION_ID_) + "]---------");
    LOG("CREACODE-> NewCall received. Session has started!");
    LOG("CREACODE-> Calling Number:" + _CALLING_NR_);
    
    AcceptCall();
    AnswerCall();
    g_NewCallAccepted = TRUE;
}

EVENT CallActive()
{
    LOG("CREACODE-> Call is active");
    bool bRet = OpenAudioChannel(_LEG_A_);
    if (bRet == FALSE) {
        LOG("CREACODE-> OpenAudioChannel returned FALSE");
        EndCall(_LEG_A_);
        ReleaseSession();
    }
    
    // Testing purposal
    PlayAudio(_LEG_A_, "survey_welcome.wav");
    PlayAudio(_LEG_A_, "survey_youcandial.wav");
    
    g_ConnectionId = ODBCConnect("DSN=creacodesas_pg;UID=postgres;PWD=142857");
    LOG("CREACODE-> NewCall g_ConnectionId: " + i2str(g_ConnectionId));
    if (g_ConnectionId < 1) {
        LOG("CREACODE-> NewCall, odbc db connection failed");
    }
    
    Question_1();
    Question_2();
    UpdateTelephoneStatus("1"); // Survey completed successfully
    
    PlayAudio(_LEG_A_, "survey_goodbye.wav");
    CloseAudioChannel(_LEG_A_);
    AbortSession();
    
    //StartCall(_LEG_A_, _LEG_B_, "11111");
    //RunScript("Creacode\\Ringing.txt");

    //RunScript("Creacode\\SelectDepartment.txt", "UserEvent");
}

FUNCTION Question_1() 
{
    g_nQuestionNumber = 1;
    int i = 0;
    int nLen = 0;
    bool gotResult = FALSE;
    int nSelectionCount = 3;
    string strSelection = "";
    
    PlayAudio(_LEG_A_, "survey_sayfirst.wav");
    
    PlayAudio(_LEG_A_, "survey_firstquestion.wav");
    for (i = 0; i < LOOP_COUNTER; i++)
    {
        g_strDigits = GetDigits(_LEG_A_, SURVEY_DIGIT_LEN, "survey_q1options.wav");
        
        LOG("CREACODE-> Question_1::Received digit: " + g_strDigits);
        nLen = strlen(g_strDigits);
        
        if (((nLen == 0) && (i != (LOOP_COUNTER-1))) || (str2i(g_strDigits) > nSelectionCount)) {
            PlayAudio(_LEG_A_, "survey_couldntgetanswer.wav");
            continue;
        } else {
            InsertAnswer(g_nQuestionNumber, str2i(g_strDigits));
            strSelection = "survey_q1s" +  g_strDigits + ".wav";
            PlayAudio(_LEG_A_, strSelection);
            PlayAudio(_LEG_A_, "survey_youselected.wav");
            break;
        }
    }

}

FUNCTION Question_2() 
{
    g_nQuestionNumber = 2;
    int i = 0;
    int nLen = 0;
    bool gotResult = FALSE;
    int nSelectionCount = 2;
    string strSelection = "";
    
    PlayAudio(_LEG_A_, "survey_saysecond.wav");
    
    PlayAudio(_LEG_A_, "survey_secondquestion.wav");
    for (i = 0; i < LOOP_COUNTER; i++)
    {
        g_strDigits = GetDigits(_LEG_A_, SURVEY_DIGIT_LEN, "survey_q2options.wav");
        
        LOG("CREACODE-> Question_2::Received digit: " + g_strDigits);
        nLen = strlen(g_strDigits);
        
        if (((nLen == 0) && (i != (LOOP_COUNTER-1))) || (str2i(g_strDigits) > nSelectionCount)) {
            PlayAudio(_LEG_A_, "survey_couldntgetanswer.wav");
            continue;
        } else {
            InsertAnswer(g_nQuestionNumber, str2i(g_strDigits));
            strSelection = "survey_q2s" +  g_strDigits + ".wav";
            PlayAudio(_LEG_A_, strSelection);
            PlayAudio(_LEG_A_, "survey_youselected.wav");
            break;
        }
    }

}

EVENT CallEnd()
{
    LOG("CREACODE-> CallEnd in newsession");
    if (g_NewCallAccepted == TRUE) {
        EndCall(_LEG_A_);
    } 
    ReleaseSession();
}







